{"/VastDocs/history/zh/VastTools.html": {"title": "VastTools", "content": "# VastTools\n\n## Version 0.0.5\n\n- [ ] 移除了 `CameraUtils` 工具类\n- [ ] 移除了 `UrlValidator` 网络Url验证器\n- [ ] `ScreenSizeUtils` 现在不再支持全面屏判断，只能获取屏幕的长宽\n- [ ] 删除了 `AspectRatioDevice`\n- [ ] `MsgWindowUtils` 不再支持弹出 `Dialog`\n- [x] 新增 `ColorUtils` 工具类\n- [x] 新增 `ShapeAndStateUtils` 工具类\n- [x] 新增 `User` 和 `Response` 两个Bean\n- [x] 优化了 `DateUtils` 工具类，修复了部分逻辑\n- [x] `IntentUtils` 添加了 `resolveActivity` 判断，针对API 30以上的情况设定了提示信息\n- [x] 修复日志打印logPrint函数存在的逻辑问题，删除了需要添加Class的环节，优化日志打印对于长度判断的设定，LogContent接口移动至 `LogUtils.kt` 内\n- [x] `MsgWindowUtils` 更名为 `ToastUtils`"}, "/VastDocs/history/zh/VastNetStateLayout.html": {"title": "VastNetStateLayout", "content": "# VastNetStateLayout\n\n## Version 0.0.3\n\n- [ ] 删除了 `SimpleNetErrorView` 和 `SimpleNetLoadingView`\n- [ ] 删除了 `VastNetLoadingView` 和·`VastNetErrorView` 接口\n- [x] 新增 `VastNetStateMgr` 来管理界面监听事件和布局资源设定\n- [x] 针对四种网络状态设计了独立的接口"}, "/VastDocs/history/zh/VastAdapter.html": {"title": "VastAdapter", "content": "# VastAdapter\n\n## Version 0.0.3\n\n- [ ] 删除了 `BaseVastAdapter` 自带的增删改查逻辑\n- [ ] 删除了 `BaseVastBindAdapter` 自带的增删改查逻辑\n- [x] 现在支持针对不同类型的item设置不同的点击事件\n- [x] `BaseVastAdapter` 现在支持快速添加新类型的VH\n- [x] 优化了点击事件接口设计\n- [x] `BaseVastAdapter` 修复了 `getItemViewType` 内的逻辑错误\n- [x] 对 `onBindViewHolder` `onCreateViewHolder` `getItemViewType` `getItemCount` 这几个方法添加 final 限制"}, "/VastDocs/history/zh/index.html": {"title": "更新历史", "content": "# 更新历史\n\n这里提供了各个依赖库的更新记录"}, "/VastDocs/history/zh/no_translate.html": {"title": "no_translate_title", "content": "---\ntitle: no_translate_title\nclass: md_page\n---\n\n\n<div id=\"visit_from\"></div>\n<div id=\"no_translate_hint\">no_translate_hint</div>\n<div>\n    <span id=\"visit_hint\">visit_hint</span>\n    <a id=\"translate_src\"></a>\n</div>\n\n<div>\n    <script>\n        function getQueryVariable(variable)\n        {\n            var query = window.location.search.substring(1);\n            var vars = query.split(\"&\");\n            for (var i=0;i<vars.length;i++) {\n                    var pair = vars[i].split(\"=\");\n                    if(pair[0] == variable){return pair[1];}\n            }\n            return(false);\n        }\n        var ref = getQueryVariable(\"ref\");\n        var from = getQueryVariable(\"from\");\n        var link = document.getElementById(\"translate_src\");\n        var fromDis = document.getElementById(\"visit_from\");\n        link.href = ref;\n        link.text = ref;\n        fromDis.innerHTML = from;\n    </script>\n</div>"}}